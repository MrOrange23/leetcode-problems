package my.playground.leetcode._924_minimize_malware_spread;

import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Set;

/**
 * Same as {@link Solution3} but without explisit objects
 *
 * 51 tests ~24ms
 * 51 tests ~31ms
 * 51 tests ~32ms
 */
public class Solution4 {

  public int minMalwareSpread(int[][] graph, int[] initial) {
    Arrays.sort(initial);

    Set<Integer> stack = new HashSet<>(graph.length);
    int maxInfected = Integer.MIN_VALUE;
    int minNodeIndex = 0;

    for (int i : initial) {
      int size = calcSize(i, graph, 0, stack);
      if (maxInfected < size) {
        maxInfected = size;
        minNodeIndex = i;
      }
    }

    return minNodeIndex;
  }

  static private int calcSize(int index, int[][] graph, int size, Set<Integer> stack) {
    int[] node = graph[index];

    for (int j = 0; j < node.length; j++) {
      if (node[j] == 1 && !stack.contains(j)) {
        size++;
        stack.add(j);

        size += calcSize(j, graph, size, stack);
      }
    }

    return size;
  }

}
